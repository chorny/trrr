#!/usr/bin/env perl

use 5.010;
use strict;
use warnings;

use POSIX;
use Encode qw< encode >;
use HTTP::Tiny;
use JSON::PP;
use Term::ANSIColor;
use App::Trrr::HotKey qw< readkey >;
use App::Trrr::Open qw< open_app >;

unless(@ARGV){ system("perldoc trrr"); exit }
if( $ARGV[0] eq '-h' ){ system("perldoc trrr"); exit }

my $seeds = 1; 
$seeds = $ARGV[$#ARGV] if $ARGV[$#ARGV] =~ /^-/; 
$seeds =~ s/-//;

my $torrent_file = "$ENV{HOME}/Downloads/trrr.torrent";
my $url = 'http://extratorrent.cc/json/?cid=4&search=' . join '+', @ARGV;

my $response = HTTP::Tiny->new->get($url);
#my $results = decode_json $response->{content};
my $results = decode_json( encode('utf8', $response->{content}) );



my $strip = sub {
    my( $item, $field ) = @_;
    my $term_width  = int `tput cols`; 
    my $size = ceil(int($item->{size})/1000/1000);
    
    my $line = '-' . ' ' . $item->{seeds} . ' ' . "$item->{title}" . ' ' . $item->{category} . ' ' . $size . 'M';
    my $max = $term_width - length($line);

    if( $term_width < length($line)){
        my $strip = length($line) - $term_width;
        my $stripped_title = $term_width - $strip + 0;
        $item->{title} = substr( $item->{title},0,$max);
    } 
    my $title = $item->{title};
    my $striped = {};
    $striped->{title} = $title;
    $striped->{size} = $size;
    return $striped->{$field}
};

sub show {
    my $key = 'A';
    my $key_color;
    my $i = 1;
    my @filter = grep { $_->{seeds} > $seeds } @{$results->{list}};
    @filter = sort { $b->{seeds} <=> $a->{seeds} } @filter;
    @filter = splice(@filter,0,15);

    for(@filter){
        if( $i % 2 ){ $key_color = 'black on_white' } else { $key_color = 'white on_black' }
        $_->{key} = $key;

        my $title = $strip->($_,'title');
        my $size = $strip->($_,'size');
        say colored([$key_color],$key) . ' ' . colored(['cyan'],$_->{seeds}) . ' ' .  colored(['yellow'],$title) . ' ' . colored(['grey15'], $_->{category}) . ' ' . $size . 'M';
        $key++; $i++;
    }

    my $pick = readkey();
    say 'saving ~/Downloads/trrr.torrent' if $pick =~ /[a-o]/;
    my @picked = grep { $_->{key} eq uc $pick } @filter;

    for(@picked){ 
        my $torrent = HTTP::Tiny->new->get("$_->{torrentLink}");
        open(my $fh,'>',$torrent_file)||die "cant open $torrent_file: $!";
        print $fh $torrent->{content};
        close $fh;
        open_app($torrent_file);
    }
}

show();

=head1 NAME

trrr - search torrents from CLI


=head1 SYNOPSIS

CLI tool for searching torrents using as few keystrokes as it gets. It's using extratorrent API, filters and sorts results which are then mapped to keys. Press the key with assigned letter and it will download+open torrent in your default torrent client. 

=head1 USAGE

- filter results with as many parameters as needed

- search for pulp fiction

C<trrr perl tutorial video>

- to limit results by minimum number of seeders add -Nr as last parameter

C<trrr perl tutorial video -100>

- first column is assigned key. To pick a result pres assigned key and it'll be opened in your default torrent client.

=cut

__DATA__
get movie box json

get db link
curl -L 'http://sbfunapi.cc/api/serials/get_db_link/' > db_link

get zip of db
curl --user-agent "MovieBox3/3.6.8 (iPhone; iOS 8.4; Scale/2.00)" -L "https://vk.com/doc199140917_439773875" > db2

unzip db2



